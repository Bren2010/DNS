-- Bind addresses
ips = { {% for ip in ips %}"{{ip}}"{% if not loop.last %}, {% endif %}{% endfor %} }

-- Load modules
modules = {
    "hints > iterate",
    "stats", -- Track internal statistics
    "predict", -- Prefetch expiring/frequent records
    "nsid", -- Server identification
    "prefill", -- Prefill root zone
    "cache", -- Record cache
    "http" -- HTTP API
}

-- Cache
cache.size = {{ cache_size }} * GB

-- Prefill root zone
prefill.config({
    ["."] = {
        url = "https://www.internic.net/domain/root.zone",
        interval = 86400 -- Pull root zone every 24 hours
    }
})

-- Instance identifier (NSID)
nsid.name("{{ inventory_hostname }}i" .. tostring(env.SYSTEMD_INSTANCE) .. ".{{ domain }}")

-- TLS configuration
net.tls("/opt/dns/cert.pem", "/opt/dns/key.pem")

-- Remote cache purge
local cache_purge = {"text/plain",
    function (h, stream)
        local m = h:get(":method")
        if m == "POST" then
            local zone = stream:get_body_as_string()
            log("[cachepurge] purging %s", zone)
            cache.clear(zone, true)
            return 200, "Purged\n"
        else
            return 400, "Bad request\n"
        end
    end
}

-- Enable TLS on API
http.config({
    tls = true,
    endpoints = { ["/cache-purge"] = cache_purge }
}, "cachepurge")

-- Public listeners
for _, ip in ipairs(ips) do
-- net.listen(ip, 53, { kind = "xdp", nic_queue = env.SYSTEMD_INSTANCE - 1 })   -- XDP (UDP)
net.listen(ip, 53, { kind = "dns" })   -- UDP fallback
net.listen(ip, 853, { kind = "tls" })  -- DoT
net.listen(ip, 443, { kind = "doh2" }) -- DoH
end

-- Loopback listeners
net.listen("127.0.0.1", 53, { kind = "dns" })
net.listen("127.0.0.53", 53, { kind = "dns" })
net.listen("::1", 53, { kind = "dns" })
net.listen("127.0.0.1", 8453, { kind = "webmgmt" })
net.listen("::1", 8453, { kind = "webmgmt" })
net.listen("127.0.0.1", 8080, { kind="cachepurge" })
net.listen("::1", 8080, { kind="cachepurge" })

-- Outgoing source address
net.outgoing_v4("{{ outgoing.ipv4 }}")
net.outgoing_v6("{{ outgoing.ipv6 }}")
